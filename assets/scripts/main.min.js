function GetURLParameter( sParam )
{
    var sPageURL = window.location.search.substring( 1 );
    var sURLVariables = sPageURL.split( '&' );
    for ( var i = 0; i < sURLVariables.length; i++ )
    {
        var sParameterName = sURLVariables[i].split( '=' );
        if ( sParameterName[0] == sParam )
        {
            return sParameterName[1];
        }
    }
}


$( document ).on( 'click', '[data-page]', function( ev ) {
  ev.preventDefault();

  var el = $( this );
  var loader = $('#load-more .load-more__loader');
  var end = $('#load-more .load-more__end');
  var page = parseInt( el.attr( 'data-page' ) );
  var next_page = page + 1;
  var num_pages = parseInt( el.attr( 'data-num-pages' ) );
  var url = window.location.href;
  var page = el.attr( 'data-page' );

  el.hide();
  loader.show();

  if (page < num_pages) {
    if ( url.indexOf( 'page=' ) >= 0 ) {
      value = GetURLParameter( 'page' );
      url = url.replace( 'page=' + value, 'page=' + page );
    } else if ( url.indexOf( "/?" ) >= 0 ){
      url = url + "&page=" + page;
    } else {
      url = url + "?page=" + page;
    }

    console.log(url)
    $.ajax( {
        url     : url,
        type    : 'get',
        cache   : false,
        success : function( data ){
          $( '.infinite-scroll__content' ).append( data );
        },
        error   : function( data ){
        },
        complete: function( data ){
          el.attr( 'data-page', next_page  );
          el.show();
          loader.hide();
        }
      } );
  } else {
    el.hide();
    loader.hide();
    end.show();
  }
} );

var getQuerystring, initCarousel, initEditorialLabel;

getQuerystring = function(key) {
  var regex, result, temp;
  regex = new RegExp('(?:\\?|&)' + key + '=(.*?)(?=&|$)', 'gi');
  result = [];
  while ((temp = regex.exec(document.location.search)) !== null) {
    result.push(temp[1]);
  }
  return result;
};

initCarousel = function() {
  $('.tabs-carousel').owlCarousel({
    items: 1,
    lazyLoad: true,
    animateOut: 'fadeOut',
    animateIn: 'fadeIn'
  });
  return $('.banner-carousel').owlCarousel({
    items: 1,
    lazyLoad: true,
    autoplay: true,
    loop: true,
    animateOut: 'fadeOut',
    animateIn: 'fadeIn',
    dots: true
  });
};

initEditorialLabel = function() {
  if (getQuerystring('editorial')) {
    return $('.posts-header .posts-header-title').show();
  } else if (getQuerystring('author')) {
    return $('.posts-header .posts-header-title').show();
  }
};

$(document).foundation();

$(document).ready(function() {
  initCarousel();
  $('.search input[type=text]').val(getQuerystring('keywords'));
  if (getQuerystring('editorial').length > 0 && getQuerystring('editorial')[0] !== "") {
    initEditorialLabel();
    return $('.search select').val(getQuerystring('editorial'));
  }
});

$('.dropdown .dropdown').hover(function() {
  return $(this).closest('.has-dropdown').find('a').eq(0).toggleClass("active");
});


$('.carousel__video').owlCarousel({
    items:1,
    merge:true,
    loop:true,
    margin:10,
    video:true,
    lazyLoad:true,
    center:true,
    videoWidth: 700,
    videoHeight: 394,
    autoplay: true,
    responsive:{
        480:{
            items:2
        },
        600:{
            items:4
        }
    }
})

var scrollHandler = function() {
    var scrollTop = $(window).scrollTop();
    var heroHeight = $('#header').outerHeight();

    if (scrollTop > heroHeight) {
        classie.remove(document.getElementById('header-fixed'), 'fadeOutUp');
        classie.add(document.getElementById('header-fixed'), 'appeared');
        classie.add(document.getElementById('header-fixed'), 'show');
        classie.add(document.getElementById('header-fixed'), 'fadeInDown');
    } else if (scrollTop < heroHeight) {
        classie.add(document.getElementById('header-fixed'), 'fadeOutUp');
        classie.remove(document.getElementById('header-fixed'), 'fadeInDown');
    }
};

$(window).scroll(scrollHandler);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZmluaXRlU2Nyb2xsLmpzIiwibWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM5REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBHZXRVUkxQYXJhbWV0ZXIoIHNQYXJhbSApXG57XG4gICAgdmFyIHNQYWdlVVJMID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHJpbmcoIDEgKTtcbiAgICB2YXIgc1VSTFZhcmlhYmxlcyA9IHNQYWdlVVJMLnNwbGl0KCAnJicgKTtcbiAgICBmb3IgKCB2YXIgaSA9IDA7IGkgPCBzVVJMVmFyaWFibGVzLmxlbmd0aDsgaSsrIClcbiAgICB7XG4gICAgICAgIHZhciBzUGFyYW1ldGVyTmFtZSA9IHNVUkxWYXJpYWJsZXNbaV0uc3BsaXQoICc9JyApO1xuICAgICAgICBpZiAoIHNQYXJhbWV0ZXJOYW1lWzBdID09IHNQYXJhbSApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiBzUGFyYW1ldGVyTmFtZVsxXTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4kKCBkb2N1bWVudCApLm9uKCAnY2xpY2snLCAnW2RhdGEtcGFnZV0nLCBmdW5jdGlvbiggZXYgKSB7XG4gIGV2LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgdmFyIGVsID0gJCggdGhpcyApO1xuICB2YXIgbG9hZGVyID0gJCgnI2xvYWQtbW9yZSAubG9hZC1tb3JlX19sb2FkZXInKTtcbiAgdmFyIGVuZCA9ICQoJyNsb2FkLW1vcmUgLmxvYWQtbW9yZV9fZW5kJyk7XG4gIHZhciBwYWdlID0gcGFyc2VJbnQoIGVsLmF0dHIoICdkYXRhLXBhZ2UnICkgKTtcbiAgdmFyIG5leHRfcGFnZSA9IHBhZ2UgKyAxO1xuICB2YXIgbnVtX3BhZ2VzID0gcGFyc2VJbnQoIGVsLmF0dHIoICdkYXRhLW51bS1wYWdlcycgKSApO1xuICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBwYWdlID0gZWwuYXR0ciggJ2RhdGEtcGFnZScgKTtcblxuICBlbC5oaWRlKCk7XG4gIGxvYWRlci5zaG93KCk7XG5cbiAgaWYgKHBhZ2UgPCBudW1fcGFnZXMpIHtcbiAgICBpZiAoIHVybC5pbmRleE9mKCAncGFnZT0nICkgPj0gMCApIHtcbiAgICAgIHZhbHVlID0gR2V0VVJMUGFyYW1ldGVyKCAncGFnZScgKTtcbiAgICAgIHVybCA9IHVybC5yZXBsYWNlKCAncGFnZT0nICsgdmFsdWUsICdwYWdlPScgKyBwYWdlICk7XG4gICAgfSBlbHNlIGlmICggdXJsLmluZGV4T2YoIFwiLz9cIiApID49IDAgKXtcbiAgICAgIHVybCA9IHVybCArIFwiJnBhZ2U9XCIgKyBwYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICB1cmwgPSB1cmwgKyBcIj9wYWdlPVwiICsgcGFnZTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyh1cmwpXG4gICAgJC5hamF4KCB7XG4gICAgICAgIHVybCAgICAgOiB1cmwsXG4gICAgICAgIHR5cGUgICAgOiAnZ2V0JyxcbiAgICAgICAgY2FjaGUgICA6IGZhbHNlLFxuICAgICAgICBzdWNjZXNzIDogZnVuY3Rpb24oIGRhdGEgKXtcbiAgICAgICAgICAkKCAnLmluZmluaXRlLXNjcm9sbF9fY29udGVudCcgKS5hcHBlbmQoIGRhdGEgKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3IgICA6IGZ1bmN0aW9uKCBkYXRhICl7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiggZGF0YSApe1xuICAgICAgICAgIGVsLmF0dHIoICdkYXRhLXBhZ2UnLCBuZXh0X3BhZ2UgICk7XG4gICAgICAgICAgZWwuc2hvdygpO1xuICAgICAgICAgIGxvYWRlci5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gKTtcbiAgfSBlbHNlIHtcbiAgICBlbC5oaWRlKCk7XG4gICAgbG9hZGVyLmhpZGUoKTtcbiAgICBlbmQuc2hvdygpO1xuICB9XG59ICk7XG4iLCJ2YXIgZ2V0UXVlcnlzdHJpbmcsIGluaXRDYXJvdXNlbCwgaW5pdEVkaXRvcmlhbExhYmVsO1xuXG5nZXRRdWVyeXN0cmluZyA9IGZ1bmN0aW9uKGtleSkge1xuICB2YXIgcmVnZXgsIHJlc3VsdCwgdGVtcDtcbiAgcmVnZXggPSBuZXcgUmVnRXhwKCcoPzpcXFxcP3wmKScgKyBrZXkgKyAnPSguKj8pKD89JnwkKScsICdnaScpO1xuICByZXN1bHQgPSBbXTtcbiAgd2hpbGUgKCh0ZW1wID0gcmVnZXguZXhlYyhkb2N1bWVudC5sb2NhdGlvbi5zZWFyY2gpKSAhPT0gbnVsbCkge1xuICAgIHJlc3VsdC5wdXNoKHRlbXBbMV0pO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5pbml0Q2Fyb3VzZWwgPSBmdW5jdGlvbigpIHtcbiAgJCgnLnRhYnMtY2Fyb3VzZWwnKS5vd2xDYXJvdXNlbCh7XG4gICAgaXRlbXM6IDEsXG4gICAgbGF6eUxvYWQ6IHRydWUsXG4gICAgYW5pbWF0ZU91dDogJ2ZhZGVPdXQnLFxuICAgIGFuaW1hdGVJbjogJ2ZhZGVJbidcbiAgfSk7XG4gIHJldHVybiAkKCcuYmFubmVyLWNhcm91c2VsJykub3dsQ2Fyb3VzZWwoe1xuICAgIGl0ZW1zOiAxLFxuICAgIGxhenlMb2FkOiB0cnVlLFxuICAgIGF1dG9wbGF5OiB0cnVlLFxuICAgIGxvb3A6IHRydWUsXG4gICAgYW5pbWF0ZU91dDogJ2ZhZGVPdXQnLFxuICAgIGFuaW1hdGVJbjogJ2ZhZGVJbicsXG4gICAgZG90czogdHJ1ZVxuICB9KTtcbn07XG5cbmluaXRFZGl0b3JpYWxMYWJlbCA9IGZ1bmN0aW9uKCkge1xuICBpZiAoZ2V0UXVlcnlzdHJpbmcoJ2VkaXRvcmlhbCcpKSB7XG4gICAgcmV0dXJuICQoJy5wb3N0cy1oZWFkZXIgLnBvc3RzLWhlYWRlci10aXRsZScpLnNob3coKTtcbiAgfSBlbHNlIGlmIChnZXRRdWVyeXN0cmluZygnYXV0aG9yJykpIHtcbiAgICByZXR1cm4gJCgnLnBvc3RzLWhlYWRlciAucG9zdHMtaGVhZGVyLXRpdGxlJykuc2hvdygpO1xuICB9XG59O1xuXG4kKGRvY3VtZW50KS5mb3VuZGF0aW9uKCk7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuICBpbml0Q2Fyb3VzZWwoKTtcbiAgJCgnLnNlYXJjaCBpbnB1dFt0eXBlPXRleHRdJykudmFsKGdldFF1ZXJ5c3RyaW5nKCdrZXl3b3JkcycpKTtcbiAgaWYgKGdldFF1ZXJ5c3RyaW5nKCdlZGl0b3JpYWwnKS5sZW5ndGggPiAwICYmIGdldFF1ZXJ5c3RyaW5nKCdlZGl0b3JpYWwnKVswXSAhPT0gXCJcIikge1xuICAgIGluaXRFZGl0b3JpYWxMYWJlbCgpO1xuICAgIHJldHVybiAkKCcuc2VhcmNoIHNlbGVjdCcpLnZhbChnZXRRdWVyeXN0cmluZygnZWRpdG9yaWFsJykpO1xuICB9XG59KTtcblxuJCgnLmRyb3Bkb3duIC5kcm9wZG93bicpLmhvdmVyKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gJCh0aGlzKS5jbG9zZXN0KCcuaGFzLWRyb3Bkb3duJykuZmluZCgnYScpLmVxKDApLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xufSk7XG5cblxuJCgnLmNhcm91c2VsX192aWRlbycpLm93bENhcm91c2VsKHtcbiAgICBpdGVtczoxLFxuICAgIG1lcmdlOnRydWUsXG4gICAgbG9vcDp0cnVlLFxuICAgIG1hcmdpbjoxMCxcbiAgICB2aWRlbzp0cnVlLFxuICAgIGxhenlMb2FkOnRydWUsXG4gICAgY2VudGVyOnRydWUsXG4gICAgdmlkZW9XaWR0aDogNzAwLFxuICAgIHZpZGVvSGVpZ2h0OiAzOTQsXG4gICAgYXV0b3BsYXk6IHRydWUsXG4gICAgcmVzcG9uc2l2ZTp7XG4gICAgICAgIDQ4MDp7XG4gICAgICAgICAgICBpdGVtczoyXG4gICAgICAgIH0sXG4gICAgICAgIDYwMDp7XG4gICAgICAgICAgICBpdGVtczo0XG4gICAgICAgIH1cbiAgICB9XG59KVxuXG52YXIgc2Nyb2xsSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY3JvbGxUb3AgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XG4gICAgdmFyIGhlcm9IZWlnaHQgPSAkKCcjaGVhZGVyJykub3V0ZXJIZWlnaHQoKTtcblxuICAgIGlmIChzY3JvbGxUb3AgPiBoZXJvSGVpZ2h0KSB7XG4gICAgICAgIGNsYXNzaWUucmVtb3ZlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFkZXItZml4ZWQnKSwgJ2ZhZGVPdXRVcCcpO1xuICAgICAgICBjbGFzc2llLmFkZChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGVhZGVyLWZpeGVkJyksICdhcHBlYXJlZCcpO1xuICAgICAgICBjbGFzc2llLmFkZChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGVhZGVyLWZpeGVkJyksICdzaG93Jyk7XG4gICAgICAgIGNsYXNzaWUuYWRkKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFkZXItZml4ZWQnKSwgJ2ZhZGVJbkRvd24nKTtcbiAgICB9IGVsc2UgaWYgKHNjcm9sbFRvcCA8IGhlcm9IZWlnaHQpIHtcbiAgICAgICAgY2xhc3NpZS5hZGQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlYWRlci1maXhlZCcpLCAnZmFkZU91dFVwJyk7XG4gICAgICAgIGNsYXNzaWUucmVtb3ZlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFkZXItZml4ZWQnKSwgJ2ZhZGVJbkRvd24nKTtcbiAgICB9XG59O1xuXG4kKHdpbmRvdykuc2Nyb2xsKHNjcm9sbEhhbmRsZXIpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==